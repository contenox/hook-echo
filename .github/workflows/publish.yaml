name: Build and Push Docker image to GHCR

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read
  packages: write
  pages: write
  id-token: write

jobs:
  publish-pipe:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag name
        id: vars
        run: echo "TAG=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ steps.vars.outputs.TAG }}
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest

      - name: Set up Node.js for docs
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Generate all documentation
        run: make generate-docs
        env:
          IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:${{ steps.vars.outputs.TAG }}

      - name: Verify documentation version
        run: |
          DOC_VERSION=$(grep '"version":' docs/openapi.json | awk -F '"' '{print $4}')
          if [ "v$DOC_VERSION" != "${{ steps.vars.outputs.TAG }}" ]; then
            echo "::error::Documentation version 'v$DOC_VERSION' does not match tag '${{ steps.vars.outputs.TAG }}'."
            exit 1
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./docs"

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
